import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.1bfda989.js";const u=JSON.parse('{"title":"JS非常用方法","description":"","frontmatter":{},"headers":[],"relativePath":"js/feichangyong.md","filePath":"js/feichangyong.md","lastUpdated":1698578871000}'),p={name:"js/feichangyong.md"},o=l(`<h1 id="js非常用方法" tabindex="-1">JS非常用方法 <a class="header-anchor" href="#js非常用方法" aria-label="Permalink to &quot;JS非常用方法&quot;">​</a></h1><h2 id="一、object-fromentries" tabindex="-1">一、Object.fromEntries <a class="header-anchor" href="#一、object-fromentries" aria-label="Permalink to &quot;一、Object.fromEntries&quot;">​</a></h2><blockquote><p><strong>Object.fromEntries()</strong> 方法把键值对列表转换为一个对象。</p></blockquote><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">entries</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Map</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#9ECBFF;">&#39;foo&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;bar&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#9ECBFF;">&#39;baz&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">42</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">obj</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Object.</span><span style="color:#B392F0;">fromEntries</span><span style="color:#E1E4E8;">(entries);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(obj);</span></span>
<span class="line"><span style="color:#6A737D;">// Expected output: Object { foo: &quot;bar&quot;, baz: 42 }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">entries</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Map</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#032F62;">&#39;foo&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;bar&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#032F62;">&#39;baz&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">42</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">obj</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">fromEntries</span><span style="color:#24292E;">(entries);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(obj);</span></span>
<span class="line"><span style="color:#6A737D;">// Expected output: Object { foo: &quot;bar&quot;, baz: 42 }</span></span></code></pre></div><p>应用：get传参时，如果值为空则不传这个参数</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">res</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">_fetchCollectDemand</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    page: pageNum.value,</span></span>
<span class="line"><span style="color:#E1E4E8;">    size: pageSize.value,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">Object.</span><span style="color:#B392F0;">fromEntries</span><span style="color:#E1E4E8;">(Object.</span><span style="color:#B392F0;">entries</span><span style="color:#E1E4E8;">(formRule.value).</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(([</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">]) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Boolean</span><span style="color:#E1E4E8;">(value)))</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">res</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">_fetchCollectDemand</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    page: pageNum.value,</span></span>
<span class="line"><span style="color:#24292E;">    size: pageSize.value,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">Object.</span><span style="color:#6F42C1;">fromEntries</span><span style="color:#24292E;">(Object.</span><span style="color:#6F42C1;">entries</span><span style="color:#24292E;">(formRule.value).</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(([</span><span style="color:#E36209;">key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">value</span><span style="color:#24292E;">]) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Boolean</span><span style="color:#24292E;">(value)))</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span></code></pre></div><h2 id="二、copytoclipboard" tabindex="-1">二、copyToClipboard <a class="header-anchor" href="#二、copytoclipboard" aria-label="Permalink to &quot;二、copyToClipboard&quot;">​</a></h2><blockquote><p>复制到剪切板</p></blockquote><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (navigator.clipboard) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// clipboard api 复制</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigator.clipboard.</span><span style="color:#B392F0;">writeText</span><span style="color:#E1E4E8;">(text)</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> textarea </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">createElement</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;textarea&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  document.body.</span><span style="color:#B392F0;">appendChild</span><span style="color:#E1E4E8;">(textarea)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 隐藏此输入框</span></span>
<span class="line"><span style="color:#E1E4E8;">  textarea.style.position </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;fixed&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  textarea.style.clip </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;rect(0 0 0 0)&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  textarea.style.top </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;10px&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 赋值</span></span>
<span class="line"><span style="color:#E1E4E8;">  textarea.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> text</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 选中</span></span>
<span class="line"><span style="color:#E1E4E8;">  textarea.</span><span style="color:#B392F0;">select</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 复制</span></span>
<span class="line"><span style="color:#E1E4E8;">  document.</span><span style="color:#B392F0;">execCommand</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;copy&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 移除输入框</span></span>
<span class="line"><span style="color:#E1E4E8;">  document.body.</span><span style="color:#B392F0;">removeChild</span><span style="color:#E1E4E8;">(textarea)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (navigator.clipboard) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// clipboard api 复制</span></span>
<span class="line"><span style="color:#24292E;">  navigator.clipboard.</span><span style="color:#6F42C1;">writeText</span><span style="color:#24292E;">(text)</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> textarea </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">createElement</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;textarea&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  document.body.</span><span style="color:#6F42C1;">appendChild</span><span style="color:#24292E;">(textarea)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 隐藏此输入框</span></span>
<span class="line"><span style="color:#24292E;">  textarea.style.position </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;fixed&#39;</span></span>
<span class="line"><span style="color:#24292E;">  textarea.style.clip </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;rect(0 0 0 0)&#39;</span></span>
<span class="line"><span style="color:#24292E;">  textarea.style.top </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;10px&#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 赋值</span></span>
<span class="line"><span style="color:#24292E;">  textarea.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> text</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 选中</span></span>
<span class="line"><span style="color:#24292E;">  textarea.</span><span style="color:#6F42C1;">select</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 复制</span></span>
<span class="line"><span style="color:#24292E;">  document.</span><span style="color:#6F42C1;">execCommand</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;copy&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 移除输入框</span></span>
<span class="line"><span style="color:#24292E;">  document.body.</span><span style="color:#6F42C1;">removeChild</span><span style="color:#24292E;">(textarea)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="三、ajax传递json数据" tabindex="-1">三、Ajax传递JSON数据 <a class="header-anchor" href="#三、ajax传递json数据" aria-label="Permalink to &quot;三、Ajax传递JSON数据&quot;">​</a></h2><ol><li>contentType设置为 application/json</li><li>data使用JSON.stringify()包裹</li></ol>`,11),e=[o];function t(c,r,E,y,i,d){return a(),n("div",null,e)}const b=s(p,[["render",t]]);export{u as __pageData,b as default};
